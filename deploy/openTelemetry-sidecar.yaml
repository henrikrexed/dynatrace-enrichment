apiVersion: opentelemetry.io/v1alpha1
kind: OpenTelemetryCollector
metadata:
  name: otel-sidecar
spec:
  mode: sidecar
  hostNetwork: false
  image: otel/opentelemetry-collector-contrib-dev:latest
  initContainers:
    - image: hrexed/dt_enrichment:0.1
      imagePullPolicy: Always
      name: dt-enrich
      volumeMounts:
      - mountPath: /var/lib/dynatrace/enrichment
        name: data-ingest-enrichment
  config: |
    receivers:
      otlp:
        protocols:
          grpc:
          http:
    processors:
      batch:
        send_batch_max_size: 1000
        timeout: 30s
        send_batch_size : 800

      memory_limiter:
         check_interval: 1s
         limit_percentage: 70
         spike_limit_percentage: 30

      transform:
         error_mode: ignore
         trace_statements:
           - context: span
             statements:
             - set(attributes["dt.entity.process_group_instance"], ${dt.entity.process_group_instance}) 
             - set(attributes["dt.entity.host"], ${dt.entity.host}) 
             - set(attributes["dt.kubernetes.cluster.id"],${dt.kubernetes.cluster.id})
             - set(attributes["k8s.pod.uid"],${k8s.pod.uid})
             - set(attributes["k8s.pod.name"],${k8s.pod.name})
             - set(attributes["k8s.namespace.name"],${k8s.namespace.name})
    

           - context: resource
             statements:
             - set(attributes["dt.entity.process_group_instance"], ${dt.entity.process_group_instance}) 
             - set(attributes["dt.entity.host"], ${dt.entity.host}) 
             - set(attributes["dt.kubernetes.cluster.id"],${dt.kubernetes.cluster.id})
             - set(attributes["k8s.pod.uid"],${k8s.pod.uid})
             - set(attributes["k8s.pod.name"],${k8s.pod.name})
             - set(attributes["k8s.namespace.name"],${k8s.namespace.name})
    
         metric_statements:
           - context: resource
             statements:
             - set(attributes["dt.entity.process_group_instance"], ${dt.entity.process_group_instance}) 
             - set(attributes["dt.entity.host"], ${dt.entity.host}) 
             - set(attributes["dt.kubernetes.cluster.id"],${dt.kubernetes.cluster.id})
             - set(attributes["k8s.pod.uid"],${k8s.pod.uid})
             - set(attributes["k8s.pod.name"],${k8s.pod.name})
             - set(attributes["k8s.namespace.name"],${k8s.namespace.name})
           - context: metric
             statements:
             - set(attributes["dt.entity.process_group_instance"], ${dt.entity.process_group_instance}) 
             - set(attributes["dt.entity.host"], ${dt.entity.host}) 
             - set(attributes["dt.kubernetes.cluster.id"],${dt.kubernetes.cluster.id})
             - set(attributes["k8s.pod.uid"],${k8s.pod.uid})
             - set(attributes["k8s.pod.name"],${k8s.pod.name})
             - set(attributes["k8s.namespace.name"],${k8s.namespace.name})
    
    exporters:
      logging:
        loglevel: debug

      otlp:
        endpoint: oteld-collector.default.svc.cluster.local:4317
        tls:
          insecure: true

    service:
      pipelines:
        traces:
          receivers: [otlp]
          processors: [memory_limiter,transform,batch]
          exporters: [otlp]
        metrics:
          receivers: [otlp]
          processors: [memory_limiter,transform,batch]
          exporters: [otlp]